{"version":3,"sources":["components/nav/Nav.js","images/loupe.svg","components/search/Search.js","components/contacts/Contacts.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","className","useGlobalState","createGlobalState","inputValue","Search","setInputValue","src","Loupe","alt","type","onChange","e","target","value","placeholder","useGlobalInput","Contacts","useState","contacts","setContacts","box","check","setCheck","loading","setLoading","useEffect","fetchItems","a","fetch","data","json","status","console","log","sort","b","last_name","addCheck","id","some","item","indexOf","splice","push","checkCheck","color","size","filter","y","first_name","toLowerCase","includes","email","map","x","avatar","onClick","charAt","checked","readOnly","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ae7a3ea.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Nav.css\"\r\n\r\nfunction Nav() {\r\n  return (\r\n    <div className=\"nav\">\r\n        Contacts\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","export default __webpack_public_path__ + \"static/media/loupe.803521ca.svg\";","import React from \"react\";\r\nimport { createGlobalState } from \"react-hooks-global-state\";\r\nimport \"./Search.css\";\r\nimport Loupe from \"../../images/loupe.svg\";\r\n\r\nconst initialState = { inputValue: \"\" };\r\nconst { useGlobalState } = createGlobalState(initialState);\r\n\r\nfunction Search() {\r\n  const [inputValue, setInputValue] = useGlobalState(\"inputValue\");\r\n\r\n  let changeFunction = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"input\">\r\n      <div>\r\n        <img src={Loupe} alt=\"\" />\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          onChange={changeFunction}\r\n          value={inputValue}\r\n          placeholder=\"Search Contacts\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\nexport const useGlobalInput = useGlobalState;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useGlobalInput } from \"../search/Search\";\r\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\r\nimport \"./Contacts.css\";\r\n\r\nfunction Contacts() {\r\n  const [inputValue] = useGlobalInput(\"inputValue\");\r\n  const [contacts, setContacts] = useState([]);\r\n  const [box] = useState([]);\r\n  const [check, setCheck] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchItems();\r\n  }, []);\r\n  const fetchItems = async () => {\r\n    const data = await fetch(\r\n      \"https://teacode-recruitment-challenge.s3.eu-central-1.amazonaws.com/users.json\"\r\n    );\r\n    setContacts(await data.json());\r\n    if (data.status === 200) {\r\n      console.log(\"API OK\");\r\n    } else {\r\n      console.log(\"API ERR\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  //   SORT BY LAST_NAME\r\n  contacts.sort((a, b) =>\r\n    a.last_name > b.last_name ? 1 : b.last_name > a.last_name ? -1 : 0\r\n  );\r\n  // SORT BY LAST_NAME\r\n\r\n  const addCheck = (id) => {\r\n    setCheck(!check);\r\n    const found = box.some((item) => item === id);\r\n    if (found === true) {\r\n      if (box.indexOf(id) > -1) {\r\n        box.splice(box.indexOf(id), 1);\r\n      }\r\n    } else {\r\n      box.push(id);\r\n    }\r\n    console.log(box);\r\n  };\r\n\r\n  const checkCheck = (id) => {\r\n    const found = box.some((item) => item === id);\r\n    if (found === true) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <div className=\"loader\">\r\n          <PropagateLoader color={\"#3faca4\"} loading={loading} size={15} />\r\n        </div>\r\n      ) : (\r\n        <div className=\"contactList\">\r\n          {contacts\r\n            .filter((y) => {\r\n              if (inputValue === \"\") {\r\n                return y;\r\n              } else {\r\n                return (\r\n                  y.first_name\r\n                    .toLowerCase()\r\n                    .includes(inputValue.toLowerCase()) ||\r\n                  y.last_name\r\n                    .toLowerCase()\r\n                    .includes(inputValue.toLowerCase()) ||\r\n                  y.email.toLowerCase().includes(inputValue.toLowerCase())\r\n                );\r\n              }\r\n            })\r\n            .map((x) => {\r\n              if (x.avatar === null) {\r\n                return (\r\n                  <div\r\n                    className=\"contact\"\r\n                    onClick={() => {\r\n                      addCheck(x.id);\r\n                    }}\r\n                  >\r\n                    <div className=\"myContact\">\r\n                      <div className=\"initials\">\r\n                        {x.first_name.charAt(0) + x.last_name.charAt(0)}\r\n                      </div>\r\n                      <div>\r\n                        <div className=\"name\">\r\n                          {x.first_name + \" \" + x.last_name}\r\n                        </div>\r\n                        <div>{x.email}</div>\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={checkCheck(x.id)}\r\n                        readOnly\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return (\r\n                  <div\r\n                    className=\"contact\"\r\n                    onClick={() => {\r\n                      addCheck(x.id);\r\n                    }}\r\n                  >\r\n                    <div className=\"myContact\">\r\n                      <img alt=\"\" src={x.avatar} />\r\n                      <div>\r\n                        <div className=\"name\">\r\n                          {x.first_name + \" \" + x.last_name}\r\n                        </div>\r\n                        <div>{x.email}</div>\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={checkCheck(x.id)}\r\n                        readOnly\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\nimport \"./App.css\";\n// IMPORT COMPONENTS //\nimport Nav from \"./components/nav/Nav\";\nimport Search from \"./components/search/Search\";\nimport Contacts from \"./components/contacts/Contacts\";\n\nfunction App() {\n  return (\n    <div>\n      <Nav />\n      <Search />\n      <Contacts />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}